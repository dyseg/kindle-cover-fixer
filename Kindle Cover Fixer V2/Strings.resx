<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Aclaration" xml:space="preserve">
    <value>(To transfer files to your Kindle, it must be connected to your PC.)</value>
  </data>
  <data name="BookListed" xml:space="preserve">
    <value>All book listed</value>
  </data>
  <data name="BookName" xml:space="preserve">
    <value>NAME</value>
  </data>
  <data name="BookNumber" xml:space="preserve">
    <value>BOOK Nº</value>
  </data>
  <data name="BookPassed" xml:space="preserve">
    <value>Is on Kindle?</value>
  </data>
  <data name="BookUuid" xml:space="preserve">
    <value>UUID</value>
  </data>
  <data name="CalibreLib" xml:space="preserve">
    <value>Calibre library:</value>
  </data>
  <data name="CanDo" xml:space="preserve">
    <value>At this point you can do three things:</value>
  </data>
  <data name="CheckLibrary" xml:space="preserve">
    <value>Please, check that you have a library correctly configured in Calibre.</value>
  </data>
  <data name="CheckLibraryTitle" xml:space="preserve">
    <value>Cannot find Calibre library(s).</value>
  </data>
  <data name="CheckSync" xml:space="preserve">
    <value> - Find unsynced books -</value>
  </data>
  <data name="Covers" xml:space="preserve">
    <value> cover(s)</value>
  </data>
  <data name="Failure" xml:space="preserve">
    <value>Failure on: </value>
  </data>
  <data name="FindBooks" xml:space="preserve">
    <value>Find books</value>
  </data>
  <data name="FindFinish" xml:space="preserve">
    <value>All cover(s) can be generated, total: </value>
  </data>
  <data name="Finding" xml:space="preserve">
    <value>Finding books in your library...</value>
  </data>
  <data name="Finished" xml:space="preserve">
    <value>Job finished</value>
  </data>
  <data name="GenerateCovers" xml:space="preserve">
    <value>Generate Covers</value>
  </data>
  <data name="Generated" xml:space="preserve">
    <value>All cover(s) generated, total: </value>
  </data>
  <data name="Generating" xml:space="preserve">
    <value>Generating new covers...</value>
  </data>
  <data name="GeneratingError" xml:space="preserve">
    <value>Can't generate: </value>
  </data>
  <data name="KindleNone" xml:space="preserve">
    <value>Device not connected</value>
  </data>
  <data name="KindleOther" xml:space="preserve">
    <value>Kindle (Other)</value>
  </data>
  <data name="KindleScribe" xml:space="preserve">
    <value>Kindle Scribe</value>
  </data>
  <data name="NewVersionAv" xml:space="preserve">
    <value>(New version available)</value>
  </data>
  <data name="NewVersionWant" xml:space="preserve">
    <value>Do you want to download and install the new version? \r\n \r\n You will get the following features: \r\n  \r\n</value>
  </data>
  <data name="NewVersionWantTitle" xml:space="preserve">
    <value>New version available!</value>
  </data>
  <data name="Of" xml:space="preserve">
    <value> of </value>
  </data>
  <data name="Ready" xml:space="preserve">
    <value>Ready.</value>
  </data>
  <data name="ThingOne" xml:space="preserve">
    <value>⦁ Close this window to do nothing (Close).</value>
  </data>
  <data name="ThingTwo" xml:space="preserve">
    <value>⦁ Transfer files directly to your Kindle (Transfer)</value>
  </data>
  <data name="Transfer" xml:space="preserve">
    <value>Transfer files</value>
  </data>
  <data name="Transferred" xml:space="preserve">
    <value>Covers transferred</value>
  </data>
  <data name="Transferring" xml:space="preserve">
    <value>Transfering covers...</value>
  </data>
  <data name="TransTitle" xml:space="preserve">
    <value>All covers have been generated</value>
  </data>
  <data name="UpToDate" xml:space="preserve">
    <value>(Up to date)</value>
  </data>
  <data name="Version" xml:space="preserve">
    <value>Version </value>
  </data>
  <data name="Yes" xml:space="preserve">
    <value>Yes</value>
  </data>
  <data name="No" xml:space="preserve">
    <value>No</value>
  </data>
  <data name="FinishListing" xml:space="preserve">
    <value>All the books in your library are listed in the table.</value>
  </data>
  <data name="TransferToKindle" xml:space="preserve">
    <value>Transfer to Kindle</value>
  </data>
  <data name="OutputClean" xml:space="preserve">
    <value>The covers in Output folder was deleted.</value>
  </data>
  <data name="OutputCleanTitle" xml:space="preserve">
    <value>Clean finished</value>
  </data>
  <data name="Cleaning" xml:space="preserve">
    <value>Cleaning unused Covers in Kindle</value>
  </data>
  <data name="Cleaned" xml:space="preserve">
    <value>Unussed cover deleted.</value>
  </data>
  <data name="BookStatus" xml:space="preserve">
    <value>RESULT</value>
  </data>
  <data name="CanTransfer" xml:space="preserve">
    <value> | Can be transferred to Kindle: </value>
  </data>
  <data name="NotTransferible" xml:space="preserve">
    <value>Generated covers will not be able to be transferred to the Kindle if no cover corresponds to a book currently on Kindle.</value>
  </data>
  <data name="KindleCleanTitle" xml:space="preserve">
    <value>Clean finished</value>
  </data>
  <data name="KindleClean" xml:space="preserve">
    <value>The unused covers in in your Kindle was deleted.</value>
  </data>
  <data name="KindleTransfer" xml:space="preserve">
    <value>The covers have been transferred to Kindle. All that's left to do is enjoy!</value>
  </data>
  <data name="KindleTransferTitle" xml:space="preserve">
    <value>Files Transferred</value>
  </data>
  <data name="File" xml:space="preserve">
    <value>File</value>
  </data>
  <data name="Settings" xml:space="preserve">
    <value>Preferences</value>
  </data>
  <data name="Exit" xml:space="preserve">
    <value>Exit</value>
  </data>
  <data name="Tools" xml:space="preserve">
    <value>Tools</value>
  </data>
  <data name="ClearKindle" xml:space="preserve">
    <value>Clean unused Covers on Kindle</value>
  </data>
  <data name="ClearOutput" xml:space="preserve">
    <value>Clean all Covers on Output</value>
  </data>
  <data name="Help" xml:space="preserve">
    <value>Help</value>
  </data>
  <data name="About" xml:space="preserve">
    <value>About</value>
  </data>
  <data name="Optimize" xml:space="preserve">
    <value>Optimize covers (reduce to the resolution that Kindle uses.)</value>
  </data>
  <data name="GrayScale" xml:space="preserve">
    <value>Gray scale images (Grayscale covers to reduce their size)</value>
  </data>
  <data name="SaveSettings" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="GroupOutput" xml:space="preserve">
    <value>Output settings (Covers)</value>
  </data>
</root>